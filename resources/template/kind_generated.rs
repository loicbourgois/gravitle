// generated by build.rs
use crate::error;
use serde::Deserialize;
use serde::Serialize;
use wasm_bindgen::prelude::wasm_bindgen;
#[wasm_bindgen]
#[derive(Serialize, Deserialize, Hash, Copy, Clone, Debug, PartialEq, Eq)]
#[repr(u32)]
pub enum Kind {
    __Kind__
}
pub fn kindstr_to_kind(x: &str) -> Kind {
    match x.trim().to_lowercase().as_str() {
        __kindstr_to_kind__
        _ => {
            let m = format!("invalid kind: {x}");
            error(&m);
            panic!("{}",m)
        }
    }
}
impl Kind {
    pub fn is_static(self) -> bool {
        matches!(
            self,
            __is_static__
        )
    }
}