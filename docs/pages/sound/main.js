const slider=e=>(localStorage.getItem(`slider_${e}`)||localStorage.setItem(`slider_${e}`,100),`\n    <input oninput="change_slider('${e}')" type="range" min="0" max="1000" id="slider_${e}" value="${localStorage.getItem(`slider_${e}`)}"></input>\n  `),html=()=>`\n    <div id="winner" class="hide">\n      ${slider(0)}\n    </div>\n  `,style=()=>"\n      input {\n        width: 30rem;\n      }\n    ",change_slider=e=>{localStorage.setItem(`slider_${e}`,document.querySelector(`#slider_${e}`).value)},slider_value=e=>document.querySelector(`#slider_${e}`).value/1e3,sound_main=()=>{window.change_slider=change_slider,document.querySelector("#content").innerHTML=`\n    <div id="winner" class="hide">\n      ${slider(0)}\n    </div>\n  `;const e=document.createElement("style");document.head.appendChild(e);for(let n of"\n      input {\n        width: 30rem;\n      }\n    ".split("}"))try{e.sheet.insertRule(n+"}")}catch(e){}const n=new(window.AudioContext||window.webkitAudioContext),t=n.createOscillator(),i=n.createGain();i.gain.value=0,t.type="square",t.frequency.linearRampToValueAtTime(30,n.currentTime),t.connect(i),i.connect(n.destination),t.start(),document.addEventListener("keydown",(e=>{if("s"==e.key){const e=n.currentTime;i.gain.linearRampToValueAtTime(.25,e+.01),t.frequency.linearRampToValueAtTime(100*(0,document.querySelector("#slider_0").value/1e3),e+.01)}})),document.addEventListener("keyup",(e=>{"s"==e.key&&i.gain.linearRampToValueAtTime(0,n.currentTime+.5)}))};export{sound_main};