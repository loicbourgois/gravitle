import{player_id,len}from"../util";let server_data,socket;const Kind={Core:1,Metal:2,Turbo:3,Mouth:4,Energy:5},minimap={},view={},counters={frame:{values:[],size:100,start:void 0,value:void 0},render:{values:[],size:100,start:void 0,value:void 0},render_minimap:{values:[],size:100,start:void 0,value:void 0},render_view:{values:[],size:100,start:void 0,value:void 0}},servers=[{location:"Local",url:"ws://127.0.0.1:8000/ws"}];function playground(){init(),connect(),render()}function select_url_html(){let e="";for(var n of servers)e+=`<option value="${n.url}">${n.location}</option>`;return`  <div>\n    <select name="url_selector" id="url_selector">\n      ${e}\n    </select>\n    <span id="connection_status">Connecting</span>\n  </div>`}function init(){start_counter("frame"),start_counter("render"),document.getElementById("content").innerHTML=`<canvas id="canvas"></canvas>\n<div id="panel">\n\x3c!-- <div id="menu">\n  <a href="/playground">Playground</a>\n  <a href="/gallery">Gallery</a>\n  <a href="/gallery?webgpu=true">Gallery (WebGPU)</a>\n</div> --\x3e\n  <canvas id="minimap"></canvas>\n  ${select_url_html()}\n  <div>\n    Zoom: <input type="range" min="0" max="1000" value="800" id="zoom_slider">\n  </div>\n  <div>\n    x: <input type="range" min="0" max="1000" value="100" id="x_slider">\n  </div>\n  <div>\n    y: <input type="range" min="0" max="1000" value="100" id="y_slider">\n  </div>\n  <p id="p_step"></p>\n  <p id="p_fps"></p>\n  <div>\n    Color by kind: <input type="checkbox" id="color_by_kind_checkbox">\n  </div>\n\n  <p id="p_counter_frame"></p>\n  <p id="p_counter_render"></p>\n  <p id="p_counter_render_minimap"></p>\n  <p id="p_counter_render_view"></p>\n\n  <p id="p_render_duration"></p>\n  <p id="p_counter_map"></p>\n  <p id="p_counter_await_map"></p>\n  <p id="p_counter_put_image"></p>\n  <p id="p_cps"></p>\n  <p id="p_compute_duration"></p>\n  <p id="p_pids"></p>\n  <pre id="p_counter_global"></pre>\n  <pre id="p_counter_activity"></pre>\n  <pre id="p_counter_collision"></pre>\n  <pre id="p_counter_linked"></pre>\n  <p id="p_energy"></p>\n</div>`,minimap.canvas=document.getElementById("minimap"),minimap.context=minimap.canvas.getContext("2d");const e=256;minimap.canvas.width=e,minimap.canvas.height=e,minimap.canvas.style.width=e+"px",minimap.canvas.style.height=e+"px",view.canvas=document.getElementById("canvas"),view.context=view.canvas.getContext("2d"),view.canvas.width=window.innerWidth,view.canvas.height=window.innerHeight,view.canvas.style.width=window.innerWidth+"px",view.canvas.style.height=window.innerHeight+"px",document.getElementById("url_selector").addEventListener("change",(function(){connect()}))}function render(){stop_counter("frame"),start_counter("frame"),start_counter("render");const e={x:document.getElementById("x_slider").value/1e3,y:document.getElementById("y_slider").value/1e3,zoom:1e3/(1e3-document.getElementById("zoom_slider").value)};if(void 0!==server_data){const n=new DataView(server_data),t=!0,i=n.getUint32(0,t),o=(n.getUint32(4,t),n.getUint32(8,t),n.getUint32(12,t),n.getUint32(16,t),n.getUint32(20,t),n.getUint32(24,t),n.getUint32(28,t)),a=get_view_max(view),r=e.x-.5/e.zoom*view.canvas.width/a,c=e.y-.5/e.zoom*view.canvas.height/a,s=r+1/e.zoom*view.canvas.width/a,l=c+1/e.zoom*view.canvas.height/a;start_counter("render_minimap"),reset_canvas(minimap.canvas,minimap.context,"#ffff0004"),render_minimap(e,minimap,view);const d=55;for(let e=0;e<o;e+=2){const i=40+e*d,o=n.getFloat32(i+0,t),a=(n.getFloat32(i+4,t),n.getFloat32(i+8,t)),v=n.getFloat32(i+12,t),u=(n.getUint32(i+24,t),r<=a&&a<=s&&c<=v&&v<=l);render_p_minimap(a,v,2*o,minimap.context,u,minimap.canvas)}stop_counter("render_minimap"),start_counter("render_view"),reset_canvas(view.canvas,view.context,"#00000080");const v=.5*(1-1/e.zoom),u=v*view.canvas.width/a,m=v*view.canvas.height/a,p=(a-view.canvas.width)/a*.5,_=(a-view.canvas.height)/a*.5,g=document.getElementById("color_by_kind_checkbox").checked;for(let i=0;i<o;i+=1){const o=40+i*d,v=n.getFloat32(o+0,t),h=(n.getFloat32(o+4,t),n.getFloat32(o+8,t)),f=n.getFloat32(o+12,t),w=n.getUint8(o+52,t),y=n.getUint8(o+52+1,t),x=n.getUint8(o+52+2,t),$=n.getUint32(o+24,t),b=Math.max(0,Math.min(1,n.getFloat32(o+28,t))),z=n.getFloat32(o+32,t);if(r<=h&&h<=s&&c<=f&&f<=l){if(g)if($==Kind.Metal){view.context.fillStyle="#aaa";let e=0,n=0;b>.5?(n=1,e=2*(1-b)):(e=1,n=2*b);let t=0;view.context.fillStyle=`rgba(${255*e}, ${255*n}, ${255*t}, 1.0)`}else if($==Kind.Energy){view.context.fillStyle="#aaa";let e=.55+.45*b,n=.55+.45*b,t=.45;view.context.fillStyle=`rgba(${255*e}, ${255*n}, ${255*t}, 1.0)`}else if($==Kind.Turbo){view.context.fillStyle="#f80";let e=1,n=1-z,t=0;view.context.fillStyle=`rgba(${255*e}, ${255*n}, ${255*t}, 1.0)`}else if($==Kind.Mouth)view.context.fillStyle="#f80";else if($==Kind.Core){let e=0,n=0,t=0;b>.5?(t=1,n=1,e=2*(1-b)):(e=1,t=2*b,n=2*b),view.context.fillStyle=`rgba(${255*e}, ${255*n}, ${255*t}, 1.0)`}else view.context.fillStyle=0==$?"#FF0":"#f0f";else view.context.fillStyle=`rgba(${.5*w+128}, ${.5*y+128}, ${.5*x+128}, 1.0)`;view.context.beginPath(),view.context.arc((h+.5-e.x-u-p)*e.zoom*a,(f+.5-e.y-m-_)*e.zoom*a,v*a*.5*e.zoom,0,2*Math.PI),view.context.fill()}}stop_counter("render_view"),document.getElementById("p_step").innerHTML=`Step: ${i}`}update_counters(),document.getElementById("p_fps").innerHTML=`FPS: ${(1e3/counters.frame.value).toFixed(0)}`,window.requestAnimationFrame((function(){render()})),stop_counter("render")}function reset_canvas(e,n,t){n.beginPath(),n.fillStyle=t,n.rect(0,0,e.width,e.height),n.fill()}function get_view_max(e){return Math.max(e.canvas.width,e.canvas.height)}function render_minimap(e,n,t){const i=get_view_max(t);n.context.beginPath(),n.context.fillStyle="#ff000088",n.context.rect(e.x*n.canvas.width-.5*n.canvas.width/e.zoom,e.y*n.canvas.height-.5*n.canvas.height/e.zoom,n.canvas.width/e.zoom,n.canvas.height/e.zoom),n.context.fill(),n.context.beginPath(),n.context.fillStyle="#FFFF0088",n.context.rect(e.x*n.canvas.width-.5*n.canvas.width/e.zoom*t.canvas.width/i,e.y*n.canvas.height-.5*n.canvas.height/e.zoom*t.canvas.height/i,n.canvas.width/e.zoom*t.canvas.width/i,n.canvas.height/e.zoom*t.canvas.height/i),n.context.fill(),n.context.fillStyle="#000"}function render_p_minimap(e,n,t,i,o,a){i.fillStyle=o?"#000":"#888",i.beginPath(),i.arc(e*a.width,n*a.height,t*a.width*.5,0,2*Math.PI),i.fill()}function start_counter(e){counters[e].start=performance.now()}function stop_counter(e){counters[e].values.push(performance.now()-counters[e].start)}function update_counters(){for(let e in counters)if(len(counters[e].values)>0){for(;len(counters[e].values)>counters[e].size;)counters[e].values.shift();let n=0;for(let t of counters[e].values)n+=t;counters[e].value=n/len(counters[e].values),document.getElementById(`p_counter_${e}`).innerHTML=`${e}: ${counters[e].value.toFixed(2)}ms`}}function connect(){document.getElementById("connection_status").innerHTML="Connecting...";let e=document.getElementById("url_selector").selectedOptions[0].value;socket&&socket.close(),socket=new WebSocket(e),socket.binaryType="arraybuffer",socket.onopen=function(e){document.getElementById("connection_status").innerHTML="Connected",console.log("[open] Connection established"),socket.send(JSON.stringify({request:"create_sender",uuid:player_id()}))},socket.onmessage=function(e){server_data=e.data},socket.onclose=function(e){document.getElementById("connection_status").innerHTML="Closed",e.wasClean?console.error(`[close] Connection closed cleanly, code=${e.code} reason=${e.reason}`):(console.error("[close] Connection died"),console.error("        Retrying in 1 sec."),window.setTimeout((function(){connect()}),1e3))},socket.onerror=function(e){document.getElementById("connection_status").innerHTML="Error",console.error(e),console.error(`[error] ${e.message}`)},console.log("Waiting for server")}export{playground};