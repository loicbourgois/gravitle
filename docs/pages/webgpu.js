import*as wasm from"../../wasm/pkg";import*as webgpu_server from"../webgpu_server";import*as webgpu_renderer from"../webgpu_renderer";import{memory}from"../../wasm/pkg/wasm_bg.wasm";import*as render_reset from"../shaders/render_reset";import*as render_trace from"../shaders/render_trace";import{update_fps}from"../renderer_util";import{random_int}from"../maths";import{len}from"../util";const float_size=4,part_args=13,part_size=52,max_parts_sqrt=64,data_size=48,max_parts=4096,RESOLUTION=1,kind={FIREFLY:1,METAL:2,TURBO:3,DIATOM:4,NEURON:5,MOUTH:6,CORE:7,EGG:8};function webgpu(){let e=!1;const t=window.location.search.replace("?","").split("&");for(var i of t)i.split("=")[0],i.split("=")[1],e=!0;document.getElementById("content").innerHTML='<canvas id="canvas"></canvas>\n<div id="panel">\n<div id="menu">\n  <a href="/playground">Playground</a>\n  <a href="/gallery">Gallery</a>\n  <a href="/gallery?webgpu=true">Gallery (WebGPU)</a>\n</div>\n  <canvas id="minimap"></canvas>\n  <div>\n    Zoom: <input type="range" min="0" max="1000" value="900" id="zoom_slider">\n  </div>\n  <div>\n    x: <input type="range" min="0" max="1000" value="500" id="x_slider">\n  </div>\n  <div>\n    y: <input type="range" min="0" max="1000" value="500" id="y_slider">\n  </div>\n  <p id="p_step"></p>\n  <p id="p_fps"></p>\n  <p id="p_render_duration"></p>\n  <p id="p_counter_map"></p>\n  <p id="p_counter_await_map"></p>\n  <p id="p_counter_put_image"></p>\n  <p id="p_cps"></p>\n  <p id="p_compute_duration"></p>\n  <p id="p_pids"></p>\n  <pre id="p_counter_global"></pre>\n  <pre id="p_counter_activity"></pre>\n  <pre id="p_counter_collision"></pre>\n  <pre id="p_counter_linked"></pre>\n  <p id="p_energy"></p>\n</div>';const r=wasm.Server.new(128,128),n=wasm.Plan.new(kind.NEURON,.25,kind.NEURON);n.add(0,1,kind.MOUTH),n.add(1,0,kind.CORE);let a=kind.TURBO;a=kind.NEURON,n.add(1,3,a),n.add(3,0,a),n.add(1,4,kind.NEURON),n.add(5,0,kind.NEURON),n.add(1,6,kind.MOUTH),n.add(7,0,kind.MOUTH),n.add(6,4,kind.NEURON),n.add(5,7,kind.NEURON),r.add_entity_full(n,wasm.Point.new(.5,.5));for(var o=0;o<100;o++)r.add_entity(n,wasm.Point.new(Math.random(),Math.random()));if(run(r),"gpu"in navigator)setup_webgpu(r);else{const e="Gravitle works best with WebGPU.\nInstructions on how to enable at https://web.dev/gpu/#use";alert(e),console.error(e),render_canvas(r)}}const counters={};for(var k of["put_image","map","await_map"])counters[k]={start:performance.now(),values:[],max:100};function start_counter(e){counters[e].start=performance.now()}function stop_counter(e){counters[e].values.push(performance.now()-counters[e].start)}async function render_webgpu(e,t,i){const r=performance.now();void 0===t.fps_counter&&(t.fps_counter=[]),void 0===t.fps_counter_length&&(t.fps_counter_length=100);const n=Math.max(canvas.width,canvas.height),a={x:document.getElementById("x_slider").value/1e3,y:document.getElementById("y_slider").value/1e3,zoom:1e3/(1e3-document.getElementById("zoom_slider").value)},o=(render_minimap(a,n).canvas,new Float32Array(new Float32Array(memory.buffer,e.parts_ptr(),13*e.parts_count()))),d=(canvas.width,canvas.height,a.x-.5/a.zoom*t.image_width/n),s=a.y-.5/a.zoom*t.image_height/n,u=d+1/a.zoom*t.image_width/n,p=s+1/a.zoom*t.image_height/n;e.parts_count(),start_counter("map");let f=t.buffers.read.mapAsync(GPUMapMode.READ),m=t.buffers.write.mapAsync(GPUMapMode.WRITE),c=t.buffers.write_data.mapAsync(GPUMapMode.WRITE);start_counter("await_map"),await f,await m,await c,stop_counter("await_map");const _=e.parts_count();new Float32Array(t.buffers.write_data.getMappedRange()).set([a.zoom,a.x,a.y,_,t.image_width,t.image_height,d,s,u,p,performance.now(),e.get_step()/1]),start_counter("put_image"),i.putImageData(new ImageData(Uint8ClampedArray.from(new Uint32Array(t.buffers.read.getMappedRange())),t.image_width,t.image_height),0,0),stop_counter("put_image"),new Float32Array(t.buffers.write.getMappedRange()).set(o),t.buffers.write.unmap(),t.buffers.write_data.unmap(),t.buffers.read.unmap(),stop_counter("map");{const e=t.device.createCommandEncoder(),i=e.beginComputePass();i.setPipeline(t.compute_pipelines.reset),i.setBindGroup(0,t.bind_groups.reset),i.dispatch(t.image_width,t.image_height),i.endPass();const r=e.finish();t.device.queue.submit([r])}{const e=t.device.createCommandEncoder();e.copyBufferToBuffer(t.buffers.write,0,t.buffers.in,0,t.data_buffer_size),e.copyBufferToBuffer(t.buffers.write_data,0,t.buffers.in_data,0,48);const i=e.beginComputePass();i.setPipeline(t.compute_pipelines.trace),i.setBindGroup(0,t.bind_groups.trace),i.dispatch(t.dispatch,t.dispatch),i.endPass(),e.copyBufferToBuffer(t.buffers.out,0,t.buffers.read,0,image_buffer_size(t)),e.copyBufferToBuffer(t.buffers.out,0,t.buffers.previous_img,0,image_buffer_size(t));const r=e.finish();t.device.queue.submit([r])}for(let e in counters)if(len(counters[e].values)>0){for(;len(counters[e].values)>counters[e].max;)counters[e].values.shift();let t=0;for(let i of counters[e].values)t+=i;t/=len(counters[e].values),document.getElementById(`p_counter_${e}`).innerHTML=`${e}: ${t.toFixed(2)}ms`}document.getElementById("p_counter_global").innerHTML=`Compute:     ${e.get_counter_value(0).toFixed(2)}ms`,document.getElementById("p_counter_activity").innerHTML=`  Activity:  ${e.get_counter_value(2).toFixed(2)}ms`,document.getElementById("p_counter_collision").innerHTML=`  Collision: ${e.get_counter_value(1).toFixed(2)}ms`,document.getElementById("p_counter_linked").innerHTML=`    Linked:  ${e.get_counter_value(3).toFixed(2)}ms`,document.getElementById("p_energy").innerHTML=`Energy: ${e.get_total_energy().toFixed(2)}`,update_fps(t),window.requestAnimationFrame((function(){render_webgpu(e,t,i)}));const g=performance.now();t.fps_counter.push({start:r,end:g,duration:g-r})}async function setup_webgpu(e){const t=await navigator.gpu.requestAdapter();if(!t)return void console.error("No gpu adapter found");const i={buffer_size:data_buffer_size({})},r={data_buffer_size:i.buffer_size,image_width:Math.floor(1*window.innerWidth),image_height:Math.floor(1*window.innerHeight),max_parts_sqrt:64};r.device=await t.requestDevice(),r.buffers={write:r.device.createBuffer({size:i.buffer_size,usage:GPUBufferUsage.MAP_WRITE|GPUBufferUsage.COPY_SRC}),in:r.device.createBuffer({size:i.buffer_size,usage:GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_DST|GPUBufferUsage.COPY_SRC}),out:r.device.createBuffer({size:image_buffer_size(r),usage:GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_DST|GPUBufferUsage.COPY_SRC}),previous_img:r.device.createBuffer({size:image_buffer_size(r),usage:GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_DST|GPUBufferUsage.COPY_SRC}),read:r.device.createBuffer({size:image_buffer_size(r),usage:GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST}),write_data:r.device.createBuffer({size:48,usage:GPUBufferUsage.MAP_WRITE|GPUBufferUsage.COPY_SRC}),in_data:r.device.createBuffer({size:48,usage:GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_DST|GPUBufferUsage.COPY_SRC})},r.bind_group_layouts={reset:r.device.createBindGroupLayout({entries:[{binding:0,visibility:GPUShaderStage.COMPUTE,buffer:{type:"storage"}},{binding:1,visibility:GPUShaderStage.COMPUTE,buffer:{type:"storage"}}]}),trace:r.device.createBindGroupLayout({entries:[{binding:0,visibility:GPUShaderStage.COMPUTE,buffer:{type:"storage"}},{binding:1,visibility:GPUShaderStage.COMPUTE,buffer:{type:"storage"}},{binding:2,visibility:GPUShaderStage.COMPUTE,buffer:{type:"storage"}}]})},r.bind_groups={reset:r.device.createBindGroup({layout:r.bind_group_layouts.reset,entries:[{binding:0,resource:{buffer:r.buffers.previous_img}},{binding:1,resource:{buffer:r.buffers.out}}]}),trace:r.device.createBindGroup({layout:r.bind_group_layouts.trace,entries:[{binding:0,resource:{buffer:r.buffers.in}},{binding:1,resource:{buffer:r.buffers.out}},{binding:2,resource:{buffer:r.buffers.in_data}}]})},r.workgroup_size=16,r.dispatch=Math.ceil(64/r.workgroup_size),r.compute_pipelines={reset:r.device.createComputePipeline({layout:r.device.createPipelineLayout({bindGroupLayouts:[r.bind_group_layouts.reset]}),compute:{module:r.device.createShaderModule({code:render_reset.get(r)}),entryPoint:"main"}}),trace:r.device.createComputePipeline({layout:r.device.createPipelineLayout({bindGroupLayouts:[r.bind_group_layouts.trace]}),compute:{module:r.device.createShaderModule({code:render_trace.get(r)}),entryPoint:"main"}})};const n=document.getElementById("canvas");n.width=r.image_width,n.height=r.image_height,n.style.width=window.innerWidth+"px",n.style.height=window.innerHeight+"px",render_webgpu(e,r,n.getContext("2d"))}function image_buffer_size(e){return e.image_width*e.image_height*4*4}function data_buffer_size(e){return 212992}function render_minimap(e,t){const i=document.getElementById("minimap");i.width=256,i.height=256;const r=i.getContext("2d");return r.beginPath(),r.fillStyle="#ff000088",r.rect(e.x*i.width-.5*i.width/e.zoom,e.y*i.height-.5*i.height/e.zoom,i.width/e.zoom,i.height/e.zoom),r.fill(),r.beginPath(),r.fillStyle="#FFFF0088",r.rect(e.x*i.width-.5*i.width/e.zoom*canvas.width/t,e.y*i.height-.5*i.height/e.zoom*canvas.height/t,i.width/e.zoom*canvas.width/t,i.height/e.zoom*canvas.height/t),r.fill(),r.fillStyle="#000",r}function render_p_minimap(e,t,i,r,n){r.fillStyle=n?"#888":"#000",r.beginPath(),r.arc(e*minimap.width,t*minimap.height,i*minimap.width*.5,0,2*Math.PI),r.fill(),r.beginPath(),r.arc((e+1)*minimap.width,t*minimap.height,i*minimap.width*.5,0,2*Math.PI),r.fill(),r.beginPath(),r.arc((e-1)*minimap.width,t*minimap.height,i*minimap.width*.5,0,2*Math.PI),r.fill(),r.beginPath(),r.arc(e*minimap.width,(t+1)*minimap.height,i*minimap.width*.5,0,2*Math.PI),r.fill(),r.beginPath(),r.arc(e*minimap.width,(t-1)*minimap.height,i*minimap.width*.5,0,2*Math.PI),r.fill()}function render_canvas(e){const t=document.getElementById("canvas");t.width=window.innerWidth,t.height=window.innerHeight,t.style.width=window.innerWidth+"px",t.style.height=window.innerHeight+"px";const i=t.getContext("2d"),r=Math.max(t.width,t.height),n={x:document.getElementById("x_slider").value/1e3,y:document.getElementById("y_slider").value/1e3,zoom:1e3/(1e3-document.getElementById("zoom_slider").value)},a=render_minimap(n,r),o=(a.canvas,new Float32Array(memory.buffer,e.parts_ptr(),13*e.parts_count())),d=.5*(1-1/n.zoom),s=d*t.width/r,u=d*t.height/r,p=(r-t.width)/r*.5,f=(r-t.height)/r*.5;for(let t=0;t<e.parts_count();t++){const e=o[13*t+0],d=o[13*t+1],m=o[13*t+4];render_p_minimap(e,d,m,a),i.fillStyle="#aaa",i.beginPath(),i.arc((e+.5-n.x-s-p)*n.zoom*r,(d+.5-n.y-u-f)*n.zoom*r,m*r*.5*n.zoom,0,2*Math.PI),i.fill()}window.requestAnimationFrame((function(){render_canvas(e)}))}function run(e){e.tick(),window.setTimeout((async function(){await run(e)}),5)}export{webgpu};