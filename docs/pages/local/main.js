import{resize_square,stroke_circle,stroke_circle_2,fill_circle_2,clear,line,fill_text}from"../canvas";import{collision_response,distance_sqrd,wrap_around,normalize,delta,rotate,add,del,mul,mod}from"../math";import{get_fps,update_fps,get_ups,update_ups,get_ups_avg_delta}from"./perf";import{ship_0,ship_2,ship_1}from"./ship";const LINK_STRENGH=.2,html=()=>'\n    <div>\n      <p id="move_with_instructions"></p>\n      <p> <a href="garage">Go to Garage</a> </p>\n    </div>\n    <canvas id="canvas"></canvas>\n    <div>\n      <p>FPS: <span id="fps">...</span></p>\n      <p>UPS: <span id="ups">...</span></p>\n    </div>\n  ',style=()=>"\n    #content {\n      display: flex;\n      width: 100%;\n      height: 100%;\n      align-content: center;\n      align-items: center;\n      flex-direction: row;\n    }\n    a {\n      color: #ffa;\n      text-decoration: none;\n      background-color: #fff0;\n      padding: 0.8rem;\n    }\n    a:hover {\n      background-color: #fff2;\n    }\n    #content > div {\n      width: 0;\n      flex-grow: 1;\n      display: flex;\n      justify-content: space-around;\n      flex-direction: column;\n      height: 100%;\n    }\n    p {\n      text-align: center;\n      color: #ffa;\n      font-family: monospace;\n    }\n    p span {\n      color: #ffa;\n    }\n    #canvas {\n        background: #113;\n        display:flex;\n        position: unset;\n    }\n    body {\n      background: #113;\n    }\n  ",DIAM=.0125,parts=[],links=[],links_set=new Set,add_part=(n,e,o,s,i)=>{const t=parts.length;return parts.push({idx:t,kind:i,d:DIAM,dp:{x:o,y:s},pp:{x:n-o,y:e-s},p:{x:n,y:e},np:{x:n,y:e},collision_response:{x:0,y:0,count:0},link_response:{x:0,y:0},links:new Set,direction:{x:0,y:0}}),t},add_link=(n,e)=>{const o=n<e?`${n}|${e}`:`${e}|${n}`;links_set.has(o)||(links.push({a:n,b:e}),links_set.add(o),parts[n].links.add(e),parts[e].links.add(n))},key_bindings=new Map,add_ship_2=(n,e,o)=>{const s=parts.length;for(let s of n.parts){const i=add_part(s.p.x-n.center.x+e,s.p.y-n.center.y+o,0,0,s.kind);s.binding&&(key_bindings.has(s.binding)||key_bindings.set(s.binding,new Set),key_bindings.get(s.binding).add(i))}for(let e of n.links)add_link(e.a+s,e.b+s)},add_ship=(n,e,o)=>{const s=parts.length,i=parts.length+1;add_part(e-.00625,o,0,0,n.p1),add_part(e+.00625,o,0,0,n.p2);for(let e of n.parts){const n=parts[s+e[0]],o=parts[s+e[1]],i=rotate(n.p,o.p,1/6),t=add_part(i.x,i.y,0,0,e[2]);add_link(t,n.idx),add_link(t,o.idx)}add_link(s,i);for(let e of n.links)add_link(e[0]+s,e[1]+s);for(let e of Object.keys(n.key_bindings)){key_bindings.has(e)||key_bindings.set(e,new Set);for(let o of n.key_bindings[e])key_bindings.get(e).add(o+s)}},average_color=(n,e)=>(n={r:parseInt(n[1],16),g:parseInt(n[2],16),b:parseInt(n[3],16)},e={r:parseInt(e[1],16),g:parseInt(e[2],16),b:parseInt(e[3],16)},`rgb(${.5*(n.r+e.r)*17},${.5*(n.g+e.g)*17},${.5*(n.b+e.b)*17})`),render=n=>{update_fps(),clear(n);const e={glass:{value:"#aaf3",score:4},booster:{value:"#fb0",value_1:"#fa0",value_2:"#f80",value_3:"#f00",score:2},core:{value:"#ffa",score:4},armor:{value:"#aaf",score:3},gun:{value:"#f88",score:1}};for(let o of parts)o.activated&&"booster"==o.kind?(fill_circle_2(n,add(o.p,mul(o.direction,.007+.003*Math.random())),.7*o.d,e[o.kind].value_3),fill_circle_2(n,add(o.p,mul(o.direction,.005+.001*Math.random())),.9*o.d,e[o.kind].value_2),fill_circle_2(n,o.p,o.d,e[o.kind].value_1)):fill_circle_2(n,o.p,o.d,e[o.kind].value);for(let o of Object.keys(e))for(let s of links){const i=parts[s.a],t=parts[s.b],a=wrap_around(i.np,t.np),r=mul(delta(a.a,a.b),.5),p=e[i.kind].score>e[t.kind].score?i.kind:t.kind;if(o==p){const o=e[p].value,s=.75;fill_circle_2(n,add(i.p,r),i.d*s,o),fill_circle_2(n,del(t.p,r),t.d*s,o)}}for(let n of links){const e=parts[n.a],o=parts[n.b],s=wrap_around(e.np,o.np);delta(s.a,s.b)}for(let n of parts);document.getElementById("fps").innerHTML=get_fps(),document.getElementById("ups").innerHTML=get_ups(),window.requestAnimationFrame((()=>{render(n)}))},compute=()=>{let n=0;for(let e of parts){e.direction={x:0,y:0};for(let n of e.links){const o=parts[n],s=wrap_around(e.p,o.p);e.direction=add(e.direction,delta(s.b,s.a))}e.direction=normalize(e.direction),e.dp.x=e.p.x-e.pp.x,e.dp.y=e.p.y-e.pp.y,"booster"==e.kind&&e.activated&&(e.dp.x-=1e-4*e.direction.x,e.dp.y-=1e-4*e.direction.y),e.np.x=e.p.x+e.dp.x,e.np.y=e.p.y+e.dp.y,e.link_response.x=0,e.link_response.y=0,e.collision_response.x=0,e.collision_response.y=0,e.collision_response.count=0,n+=distance_sqrd(e.dp)}for(let n of parts)for(let e of parts)if(n.idx<e.idx){const o=wrap_around(n.np,e.np);o.a.np={x:o.a.x,y:o.a.y},o.b.np={x:o.b.x,y:o.b.y},o.a.dp=n.dp,o.b.dp=e.dp;const s=o.d_sqrd,i=.5*(n.d+e.d);if(s<i*i){let s=collision_response(o.a,o.b);links_set.has(`${n.idx}|${e.idx}`)&&(s.x*=.5,s.y*=.5),n.collision_response.x-=s.x,n.collision_response.y-=s.y,n.collision_response.count+=1,e.collision_response.x+=s.x,e.collision_response.y+=s.y,e.collision_response.count+=1}}for(let n of links){const e=parts[n.a],o=parts[n.b],s=wrap_around(e.np,o.np),i=Math.sqrt(s.d_sqrd),t=normalize(delta(s.a,s.b),i),a=.2*(.5*(e.d+o.d)-i);e.link_response.x-=t.x*a*.5,e.link_response.y-=t.y*a*.5,o.link_response.x+=t.x*a*.5,o.link_response.y+=t.y*a*.5}for(let n of parts)n.collision_response.count&&(n.collision_response.x/=n.collision_response.count,n.collision_response.y/=n.collision_response.count,n.np.x+=n.collision_response.x,n.np.y+=n.collision_response.y,n.np.x+=n.link_response.x,n.np.y+=n.link_response.y),n.p.x=(n.np.x+1)%1,n.p.y=(n.np.y+1)%1,n.pp.x=n.p.x-n.dp.x-n.collision_response.x-n.link_response.x,n.pp.y=n.p.y-n.dp.y-n.collision_response.y-n.link_response.y;update_ups(),window.setTimeout((()=>{compute()}),10-get_ups_avg_delta())},local_main=()=>{document.querySelector("#content").innerHTML='\n    <div>\n      <p id="move_with_instructions"></p>\n      <p> <a href="garage">Go to Garage</a> </p>\n    </div>\n    <canvas id="canvas"></canvas>\n    <div>\n      <p>FPS: <span id="fps">...</span></p>\n      <p>UPS: <span id="ups">...</span></p>\n    </div>\n  ';const n=document.createElement("style");document.head.appendChild(n);for(let e of"\n    #content {\n      display: flex;\n      width: 100%;\n      height: 100%;\n      align-content: center;\n      align-items: center;\n      flex-direction: row;\n    }\n    a {\n      color: #ffa;\n      text-decoration: none;\n      background-color: #fff0;\n      padding: 0.8rem;\n    }\n    a:hover {\n      background-color: #fff2;\n    }\n    #content > div {\n      width: 0;\n      flex-grow: 1;\n      display: flex;\n      justify-content: space-around;\n      flex-direction: column;\n      height: 100%;\n    }\n    p {\n      text-align: center;\n      color: #ffa;\n      font-family: monospace;\n    }\n    p span {\n      color: #ffa;\n    }\n    #canvas {\n        background: #113;\n        display:flex;\n        position: unset;\n    }\n    body {\n      background: #113;\n    }\n  ".split("}"))try{n.sheet.insertRule(e+"}")}catch(n){}const e=document.querySelector("#canvas");resize_square(e);const o=e.getContext("2d");localStorage.getItem("ship")||localStorage.setItem("ship",ship_1),add_ship_2(JSON.parse(localStorage.getItem("ship")),.5,.5),add_ship(ship_2,.27,.5),add_ship(ship_2,.5,.27),add_ship(ship_2,.73,.5),add_ship(ship_2,.5,.73),add_ship(ship_2,.8,.8),add_ship(ship_2,.2,.8),add_ship(ship_2,.8,.2),add_ship(ship_2,.2,.2),render(o),compute(),document.addEventListener("keydown",(n=>{if(key_bindings.get(n.key))for(let e of key_bindings.get(n.key))parts[e].activated=!0})),document.addEventListener("keyup",(n=>{if(key_bindings.get(n.key))for(let e of key_bindings.get(n.key))parts[e].activated=!1}));const s=new Set;for(let n of key_bindings){const e=n[0],o=n[1];for(let n of o)"booster"==parts[n].kind&&s.add(e)}s.size&&(document.querySelector("#move_with_instructions").innerHTML=`Move with ${Array.from(s).map((n=>n.toUpperCase())).join(", ")}`)};export{local_main};